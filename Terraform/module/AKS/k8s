resource "random_id" "id" {
  byte_length = 4
}


resource "azurerm_network_security_group" "NSG" {
  name     = "NSG-mediawiki-${random_id.id.hex}"
  location = var.location

  resource_group_name = var.resourceGroup
  dynamic "security_rule" {
    for_each = var.securityRules
    content {
      name                       = security_rule.value["name"]
      priority                   = security_rule.value["priority"]
      direction                  = security_rule.value["direction"]
      access                     = security_rule.value["access"]
      protocol                   = security_rule.value["protocol"]
      source_port_range          = security_rule.value["source_port_range"]
      destination_port_range     = security_rule.value["destination_port_range"]
      source_address_prefix      = "*"
      destination_address_prefix = "*"
    }

  }
}


resource "azurerm_virtual_network" "kube-net" {
  name                = "vnet-1"
  location            = var.location
  resource_group_name = var.resourceGroup
  address_space       = ["192.168.0.0/16"]

  tags = {
    application = "mediawiki"
    purpose     = "testing"
  }
}

resource "azurerm_subnet" "akssubnet" {
  name                 = "aks-${random_id.id.hex}"
  address_prefixes     = ["192.168.1.0/24"]
  virtual_network_name = azurerm_virtual_network.kube-net.name
  resource_group_name  = var.resourceGroup
}


resource "azurerm_subnet_network_security_group_association" "nsg" {
  subnet_id                 = azurerm_subnet.akssubnet.id
  network_security_group_id = azurerm_network_security_group.NSG.id
}


resource "azurerm_container_registry" "acr" {
  name                = var.containerRegistery
  resource_group_name = var.resourceGroup
  location            = var.location
  sku                 = "Basic"
}

resource "azurerm_kubernetes_cluster" "kube" {
  name                = var.clusterName
  location            = var.location
  resource_group_name = var.resourceGroup
  dns_prefix          = "testaks1"

  default_node_pool {
    name            = var.poolName
    node_count      = var.nodeCount
    vm_size         = "Standard_D2ads_v5"
    os_disk_size_gb = 35
    vnet_subnet_id  = azurerm_subnet.akssubnet.id
  }
  identity {
    type = "SystemAssigned"
  }

  tags = {
    application = "mediawiki"
    purpose     = "testing"
  }
}


resource "azurerm_role_assignment" "ars" {
  principal_id                     = azurerm_kubernetes_cluster.kube.kubelet_identity.object_id
  role_definition_name             = "AcrPull"
  scope                            = azurerm_container_registry.acr.id
  skip_service_principal_aad_check = true
}
